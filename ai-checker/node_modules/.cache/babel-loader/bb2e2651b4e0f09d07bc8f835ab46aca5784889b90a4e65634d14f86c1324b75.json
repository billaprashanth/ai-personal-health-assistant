{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prash\\\\OneDrive\\\\Desktop\\\\ai-personal-health-assistant\\\\frontend\\\\ai-checker\\\\src\\\\components\\\\ReminderSystem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.error(\"Failed to load data!\");\nconst ReminderSystem = () => {\n  _s();\n  const [medicineName, setMedicineName] = useState(\"\");\n  const [datetime, setDatetime] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const handleSetReminder = async () => {\n    if (!medicineName || !datetime) {\n      setMessage(\"Please fill in all fields.\");\n      return;\n    }\n    const time = new Date(datetime).toTimeString().slice(0, 5); // \"HH:MM\"\n\n    try {\n      const res = await axios.post(\"http://127.0.0.1:8000/reminders\", {\n        medicine_name: medicineName,\n        time: time\n      });\n      setMessage(res.data.message || \"Reminder set successfully!\");\n      toast.success(\"Reminder added successfully!\");\n      setMedicineName(\"\");\n      setDatetime(\"\");\n    } catch (err) {\n      console.error(err);\n      setMessage(\"Failed to set reminder.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-lg mx-auto p-6 mt-10 bg-white rounded-xl shadow-md border border-blue-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-blue-700 mb-4\",\n      children: \"Set Reminder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Reminder (e.g., Take medicine)\",\n      className: \"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-blue-400\",\n      value: medicineName,\n      onChange: e => setMedicineName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"datetime-local\",\n      className: \"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-blue-400\",\n      value: datetime,\n      onChange: e => setDatetime(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSetReminder,\n      className: \"w-full bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700 transition duration-300\",\n      children: \"Set Reminder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-center text-sm text-blue-700 font-medium\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ReminderSystem, \"rQEc6vYm1IvQQQmCF6/HUmFzmio=\");\n_c = ReminderSystem;\nexport default ReminderSystem;\nvar _c;\n$RefreshReg$(_c, \"ReminderSystem\");","map":{"version":3,"names":["React","useState","axios","toast","jsxDEV","_jsxDEV","error","ReminderSystem","_s","medicineName","setMedicineName","datetime","setDatetime","message","setMessage","handleSetReminder","time","Date","toTimeString","slice","res","post","medicine_name","data","success","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/prash/OneDrive/Desktop/ai-personal-health-assistant/frontend/ai-checker/src/components/ReminderSystem.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\ntoast.error(\"Failed to load data!\");\r\nconst ReminderSystem = () => {\r\n  const [medicineName, setMedicineName] = useState(\"\");\r\n  const [datetime, setDatetime] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleSetReminder = async () => {\r\n    if (!medicineName || !datetime) {\r\n      setMessage(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n\r\n    const time = new Date(datetime).toTimeString().slice(0, 5); // \"HH:MM\"\r\n\r\n    try {\r\n      const res = await axios.post(\"http://127.0.0.1:8000/reminders\", {\r\n        medicine_name: medicineName,\r\n        time: time,\r\n      });\r\n      setMessage(res.data.message || \"Reminder set successfully!\");\r\n      toast.success(\"Reminder added successfully!\");\r\n      setMedicineName(\"\");\r\n      setDatetime(\"\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessage(\"Failed to set reminder.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-lg mx-auto p-6 mt-10 bg-white rounded-xl shadow-md border border-blue-200\">\r\n      <h2 className=\"text-2xl font-bold text-blue-700 mb-4\">Set Reminder</h2>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Reminder (e.g., Take medicine)\"\r\n        className=\"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n        value={medicineName}\r\n        onChange={(e) => setMedicineName(e.target.value)}\r\n      />\r\n\r\n      <input\r\n        type=\"datetime-local\"\r\n        className=\"w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n        value={datetime}\r\n        onChange={(e) => setDatetime(e.target.value)}\r\n      />\r\n\r\n      <button\r\n        onClick={handleSetReminder}\r\n        className=\"w-full bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700 transition duration-300\"\r\n      >\r\n        Set Reminder\r\n      </button>\r\n\r\n      {message && (\r\n        <p className=\"mt-4 text-center text-sm text-blue-700 font-medium\">{message}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReminderSystem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prash\\\\OneDrive\\\\Desktop\\\\ai-personal-health-assistant\\\\frontend\\\\ai-checker\\\\src\\\\components\\\\SymptomChecker.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SymptomChecker = () => {\n  _s();\n  const [symptoms, setSymptoms] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const handleCheck = async () => {\n    const res = await axios.post(\"http://localhost:8000/predict/\", {\n      symptoms: symptoms.split(\",\")\n    });\n    setResult(res.data.predicted_disease);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-lg mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-2\",\n      children: \"Symptom Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"border p-2 w-full\",\n      placeholder: \"e.g., fever, headache, fatigue\",\n      value: symptoms,\n      onChange: e => setSymptoms(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCheck,\n      className: \"mt-2 bg-blue-500 text-white px-4 py-2\",\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 font-medium\",\n      children: [\"Predicted Disease: \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(SymptomChecker, \"eiVbFTD55cx3gsF7BjwzFM4DetA=\");\n_c = SymptomChecker;\nexport default SymptomChecker;\nvar _c;\n$RefreshReg$(_c, \"SymptomChecker\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","SymptomChecker","_s","symptoms","setSymptoms","result","setResult","handleCheck","res","post","split","data","predicted_disease","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/prash/OneDrive/Desktop/ai-personal-health-assistant/frontend/ai-checker/src/components/SymptomChecker.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst SymptomChecker = () => {\r\n  const [symptoms, setSymptoms] = useState(\"\");\r\n  const [result, setResult] = useState(\"\");\r\n\r\n  const handleCheck = async () => {\r\n    const res = await axios.post(\"http://localhost:8000/predict/\", {\r\n      symptoms: symptoms.split(\",\"),\r\n    });\r\n    setResult(res.data.predicted_disease);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-lg mx-auto\">\r\n      <h2 className=\"text-xl font-semibold mb-2\">Symptom Checker</h2>\r\n      <input\r\n        type=\"text\"\r\n        className=\"border p-2 w-full\"\r\n        placeholder=\"e.g., fever, headache, fatigue\"\r\n        value={symptoms}\r\n        onChange={(e) => setSymptoms(e.target.value)}\r\n      />\r\n      <button onClick={handleCheck} className=\"mt-2 bg-blue-500 text-white px-4 py-2\">\r\n        Check\r\n      </button>\r\n      {result && <p className=\"mt-4 font-medium\">Predicted Disease: {result}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SymptomChecker;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,gCAAgC,EAAE;MAC7DN,QAAQ,EAAEA,QAAQ,CAACO,KAAK,CAAC,GAAG;IAC9B,CAAC,CAAC;IACFJ,SAAS,CAACE,GAAG,CAACG,IAAI,CAACC,iBAAiB,CAAC;EACvC,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCd,OAAA;MAAIa,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/DlB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXN,SAAS,EAAC,mBAAmB;MAC7BO,WAAW,EAAC,gCAAgC;MAC5CC,KAAK,EAAElB,QAAS;MAChBmB,QAAQ,EAAGC,CAAC,IAAKnB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFlB,OAAA;MAAQyB,OAAO,EAAElB,WAAY;MAACM,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EAAC;IAEhF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRb,MAAM,iBAAIL,OAAA;MAAGa,SAAS,EAAC,kBAAkB;MAAAC,QAAA,GAAC,qBAAmB,EAACT,MAAM;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV,CAAC;AAAChB,EAAA,CA3BID,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AA6BpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}